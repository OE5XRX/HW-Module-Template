name: Create Docs on Main
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  release:
    types: [published]

permissions:
  contents: write

jobs:
  export-ecad:
    name: Export ECAD
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache 3D models data
        id: models-cache
        uses: set-soft/cache@main
        with:
          path: ~/cache_3d
          key: cache_3d

      - name: Update the PCBs on release with hash and release tag
        if: github.event_name == 'release'
        run: |
          export COMMIT=$(git rev-parse --short HEAD)
          echo "COMMIT = ${COMMIT}"
          echo "GITHUB_REF_NAME = ${GITHUB_REF_NAME}"
          sed -i "s/<<HASH>>/${GITHUB_REF_NAME}-${COMMIT}/g" hardware/*

      - name: Update the PCBs with the BETA and git hash
        if: github.event_name != 'release'
        run: |
          export COMMIT=$(git rev-parse --short HEAD)
          echo "COMMIT = ${COMMIT}"
          sed -i "s/<<HASH>>/BETA-${COMMIT}/g" hardware/*

      - name: Generate Export Files
        uses: INTI-CMNB/KiBot@v2_k9
        with:
          config: output.kibot.yaml
          dir: output
          schema: 'hardware/*.kicad_sch'
          board: 'hardware/*.kicad_pcb'
          cache3D: YES
          verbose: 0

      - name: Upload Export Files as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production
          path: output
          if-no-files-found: error

      - name: Generate Parts on InvenTree Server
        if: github.event_name == 'release'
        env:
          INVENTREE_API_TOKEN: ${{ secrets.INVENTREE_API_TOKEN }}
          INVENTREE_API_HOST: ${{ secrets.INVENTREE_API_HOST }}
        run: |
          pip install -r scripts/requirements.txt
          python3 scripts/bom-export.py --csv_file output/*-bom.csv --name "${{ github.event.repository.name }}" --version "${{ github.ref_name }}" --pcb_image output/*-3D_top-without.png --assembly_image output/*-3D_top-with.png

#      - name: Deploy ðŸš€
#        uses: JamesIves/github-pages-deploy-action@3.7.1
#        with:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          BRANCH: gh-pages # The branch the action should deploy to.
#          FOLDER: docs/_site # The folder the action should deploy.
#          TARGET_FOLDER: ${{ env.DEPLOY_PATH }}
#          CLEAN: true # Automatically remove deleted files from the deploy branch
#          CLEAN_EXCLUDE: '["version"]'
